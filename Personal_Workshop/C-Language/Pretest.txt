#1
d = ((3 * a * (c * c + 1)) / (5 * c * (x * x + 1))) + ((2 * x * (y * y + (2 * y) - 1)) / (5 * y * (z - 1)));


#2
m = 4 * 3 / 5 * 6 - 9 / 4 * 8 / 7 + 5 / 2;
       vvv
4 * 3 = 12 / 5 = 2 * 6 = 12
9 / 4 = 2 * 8 = 16 / 7 = 2
5 / 2 = 2
12 - 2 + 2 = 12
       vvv
m = 12

#3
__5=>sum_=_5
__9__6=>sum_=_20
__3__7__2=>sum_=_32
__6__1__8_10=>sum_=_57

#4
#include <stdio.h>

int main() {
	int x, res, min = 999999, max = -999999;

	for (x = -4; x <= 4; x++) {
		res = (x * x * x/3) + (x * x/2) - (6 * x) + 8;
		if (res > max) {
			max = res;
			continue;
		} else if (res < min) {
			min = res;
			continue;
		}
	}

	return 0;
}
